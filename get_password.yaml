- name: get password
  hosts: server1

  tasks:
    - name: Load Global parameters
      include_vars:
        file: ./config.txt

    #- name: get pgpass password 0 , looking for *:*:*:username:password
    #  shell: egrep -n '^[^:]+:[^:]+:[^:]+:{{ cip_db_user }}' .pgpass_bkp
    #  register: cip_db_pass_0
#
    #- name: print cip_db_pass_0
    #  debug:
    #    var: cip_db_pass_0.stdout_lines

#    - name: get pgpass password 1 , looking for *:*:*:username:password
#      shell: egrep -n '^[^:]+:[^:]+:[^:]+:{{ cip_db_user }}' .pgpass_bkp1
#      register: cip_db_pass_1
#
#    - name: print cip_db_pass_1
#      debug:
#        var: cip_db_pass_1.stdout_lines
#
#    - name: get pgpass password 2 , looking for *:*:*:username:password
#      shell: egrep -n '^[^:]+:[^:]+:[^:]+:{{ cip_db_user }}' .pgpass_bkp2
#      register: cip_db_pass_2
#
#    - name: print cip_db_pass_2
#      debug:
#        var: cip_db_pass_2.stdout_lines
#
#    - name: get pgpass password 3 , looking for *:*:*:username:password
#      shell: egrep -n '^[^:]+:[^:]+:[^:]+:{{ cip_db_user }}' .pgpass_bkp3
#      register: cip_db_pass_3
#
#    - name: print cip_db_pass_3
#      debug:
#        var: cip_db_pass_3.stdout_lines
#
#    - name: get pgpass password 4 , looking for *:*:*:username:password
#      shell: egrep -n '^[^:]+:[^:]+:[^:]+:{{ cip_db_user }}' .pgpass_bkp4
#      register: cip_db_pass_4
#
#    - name: print cip_db_pass_4
#      debug:
#        var: cip_db_pass_4.stdout_lines

    - name: print *:*:* , hostname:*:*  ,  *:port:* , hostname:port:* of this pattern0
      shell: |
        egrep -n '^\*\:\*\:[^:]+\:{{ cip_db_user }}'  .pgpass | head -1
        egrep -n '^{{ cip_host }}:\*:\*:{{ cip_db_user }}' .pgpass | head -1
        egrep -n '^\*:{{ cip_port }}:\*:{{ cip_db_user }}' .pgpass | head -1
        egrep -n '^{{ cip_host }}:{{ cip_port }}:\*:{{ cip_db_user }}' .pgpass | head -1
      register: pattern

    - name: print pattern
      debug:
        var: pattern.stdout_lines

#    - name: print hostname:*:* of this pattern1
#      shell: egrep -n '^{{ cip_host }}:\*:\*:{{ cip_db_user }}' .pgpass_bkp
#      register: pattern1
#
#     #egrep - '^{{ cip_host }}:\*\:\*\:{{ cip_db_user }}'
#    - name: print pattern1
#      debug:
#        var: pattern1.stdout
#
#    - name: print *:port:* of this pattern2
#      shell: egrep -n '^\*:{{ cip_port }}:\*:{{ cip_db_user }}' .pgpass_bkp
#      register: pattern2
#
#     #egrep - '^{{ cip_host }}:\*\:\*\:{{ cip_db_user }}'
#    - name: print pattern2
#      debug:
#        var: pattern2.stdout
#
#    - name: print hostname:port:* of this pattern3
#      shell: egrep -n '^{{ cip_host }}:{{ cip_port }}:\*:{{ cip_db_user }}' .pgpass_bkp
#      register: pattern3
#
#    - name: print pattern3
#      debug:
#        var: pattern3.stdout_lines
#
#    - name: create a list of all pattern output
#      set_fact:
#        pattern_output: " {{ pattern_output | default([]) + item }} "
#      with_items:
#        - "{{ pattern1.stdout_lines }}"
#        - "{{ pattern2.stdout_lines }}"
#        - "{{ pattern3.stdout_lines }}"
#        - "{{ pattern0.stdout_lines }}"
#
#    - name: print list pattern_output
#      debug:
#        var: pattern_output
    - name: Convert input list to key  and password formart
      set_fact:
        output_list: "{{ output_list | default([]) + [{ 'key': item.split(':')[0], 'password': item.split(':')[-1] }] }}"
      loop: "{{ pattern.stdout_lines }}"
    - debug:
        var: output_list

    - name: sort the list in anscending order
      set_fact:
        output_list: "{{ output_list | sort(attribute='key')  }} "
    - debug:
        var: output_list[0].password

    - name: set fact cip_db_pass
      set_fact:
        cip_db_pass: output_list[0].password
